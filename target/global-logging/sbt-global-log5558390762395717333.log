[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\camerum\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\camerum\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 253.0636ms
[debug]       Load.loadUnit: defsScala took 0.8771ms
[debug] [Loading] Scanning directory C:\Users\camerum\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\camerum\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 48.1872 ms
[debug]           Load.resolveProject(global-plugins) took 110.7701ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\camerum\.sbt\1.0\plugins, plugins: List(<none>))) took 223.7222ms
[debug] [Loading] Done in C:\Users\camerum\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 282.2272ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.8017ms
[debug]     Load.loadUnit(file:/C:/Users/camerum/.sbt/1.0/plugins/, ...) took 557.9019ms
[debug]   Load.apply: load took 1145.3767ms
[debug]   Load.apply: resolveProjects took 54.7087ms
[debug]   Load.apply: finalTransforms took 351.1593ms
[debug]   Load.apply: config.delegates took 23.3774ms
[debug]   Load.apply: Def.make(settings)... took 5567.7341ms
[debug]   Load.apply: structureIndex took 376.5687ms
[debug]   Load.apply: mkStreams took 3.2959ms
[info] loading global plugins from C:\Users\camerum\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 12797.1725ms
[debug]           Load.loadUnit: plugins took 79.1105ms
[debug]           Load.loadUnit: defsScala took 0.0082ms
[debug] [Loading] Scanning directory C:\Users\camerum\Documents\pro\project
[debug]             Load.loadUnit: mkEval took 15.3779ms
